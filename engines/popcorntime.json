{
  "version": 8,
  "name": "popcorntime.sh",
  "home": {
    "get": "https://popcorntime.sh"
  },
  "news": {
    "get": "https://blog.popcorntime.sh",
    "list": "article",
    "title": ".post-title",
    "date": "time",
    "details": "a:regex(.*href=\"([^\"]*)\".*)"
  },
  "top": {
    "json_get": "tops",
    "js": "function fmt(s) {\r\n    if (s > 0.1 * 1024 * 1024 * 1024) {\r\n      var f = s \/ 1024 \/ 1024 \/ 1024;\r\n      return f.toFixed(1) + ' GB';\r\n    } else if (s > 0.1 * 1024 * 1024) {\r\n      var f = s \/ 1024 \/ 1024;\r\n      return f.toFixed(1) + 'MB';\r\n    } else {\r\n      var f = s \/ 1024;\r\n      return f.toFixed(1) + 'kb';\r\n    }\r\n};\r\nvar jj = JSON.parse(torrentclient.json());\r\nvar html = '';\r\nvar list = jj.MovieList;\r\nfor(var index in list) {\r\n  var item = list[index];\r\n  html += '<div class=\"movie\">\\n';\r\n  html += '  <h3 align=\"center\" class=\"title\">' + item.title + '<\/h3>\\n';\r\n  html += '  <div align=\"center\"><img class=\"poster\" src=\"' + item.poster_med + '\" \/><\/div>\\n';\r\n  var items = item.items;\r\n  items.sort(function(a,b) {\r\n    return b.torrent_seeds-a.torrent_seeds;\r\n  });\r\n  for(var index in items) {\r\n    var source = items[index];\r\n    html += '  <p>\\n';\r\n    html += '    <span class=\"quality\">' + source.quality + '<\/span>\\n';\r\n    html += '    <a class=\"magnet\" href=\"' + encodeURI(source.torrent_magnet) + '\">magnet<\/a>\\n';\r\n    html += '    <a class=\"torrent\" href=\"' + encodeURI(source.torrent_url) + '\">torrent<\/a>\\n';\r\n    html += '    <span class=\"size\">size:' + fmt(source.size_bytes) + '<\/span>\\n';\r\n    html += '    <span class=\"seed\">seed:' + source.torrent_seeds + '<\/span>\\n';\r\n    html += '  <\/p>\\n';\r\n  };\r\n  html += '<\/div>\\n';\r\n};\r\nif(list.length > 0) {\r\n  page = (RegExp('page' + '=' + '(.+?)(&|$)').exec(location.href)||[,null])[1]\r\n  newpage = 'page=' + (parseInt(page,10)+1);\r\n  href = location.href.replace(\/page=[^&]+\/, newpage);\r\n  html += '<a class=\"next\" href=\"' + href + '\" \/a>'\r\n}\r\ndocument.body.innerHTML=html;",
    "grid": "div.movie",
    "details_html": "regex((.*))",
    "title": "h3",
    "image": ".poster:regex(.*src=\"([^\"]*)\".*)",
    "magnet": "a.magnet:regex(.*href=\"([^\"]*)\".*)",
    "torrent": "a.torrent:regex(.*href=\"([^\"]*)\".*)",
    "next": ".next:regex(.*href=\"([^\"]*)\".*)"
  },
  "tops": {
    "Home": "http://api.apidomain.info/list?sort=seeds&quality=720p,1080p,3d&count=15&page=1"
  },
  "search": {
    "json_get": "http://api.apidomain.info/list?keywords=%s&sort=seeds&quality=720p,1080p,3d&count=15&page=1",
    "js": "function fmt(s) {\r\n    if (s > 0.1 * 1024 * 1024 * 1024) {\r\n      var f = s \/ 1024 \/ 1024 \/ 1024;\r\n      return f.toFixed(1) + ' GB';\r\n    } else if (s > 0.1 * 1024 * 1024) {\r\n      var f = s \/ 1024 \/ 1024;\r\n      return f.toFixed(1) + 'MB';\r\n    } else {\r\n      var f = s \/ 1024;\r\n      return f.toFixed(1) + 'kb';\r\n    }\r\n};\r\nvar jj = JSON.parse(torrentclient.json());\r\nvar html = '';\r\nvar list = jj.MovieList;\r\nfor(var index in list) {\r\n  var item = list[index];\r\n  html += '<div class=\"movie\">\\n';\r\n  html += '  <h3 align=\"center\" class=\"title\">' + item.title + '<\/h3>\\n';\r\n  html += '  <div align=\"center\"><img class=\"poster\" src=\"' + item.poster_med + '\" \/><\/div>\\n';\r\n  var items = item.items;\r\n  items.sort(function(a,b) {\r\n    return b.torrent_seeds-a.torrent_seeds;\r\n  });\r\n  for(var index in items) {\r\n    var source = items[index];\r\n    html += '  <p>\\n';\r\n    html += '    <span class=\"quality\">' + source.quality + '<\/span>\\n';\r\n    html += '    <a class=\"magnet\" href=\"' + encodeURI(source.torrent_magnet) + '\">magnet<\/a>\\n';\r\n    html += '    <a class=\"torrent\" href=\"' + encodeURI(source.torrent_url) + '\">torrent<\/a>\\n';\r\n    html += '    <span class=\"size\">size:' + fmt(source.size_bytes) + '<\/span>\\n';\r\n    html += '    <span class=\"seed\">seed:' + source.torrent_seeds + '<\/span>\\n';\r\n    html += '  <\/p>\\n';\r\n  };\r\n  html += '<\/div>\\n';\r\n};\r\nif(list.length > 0) {\r\n  page = (RegExp('page' + '=' + '(.+?)(&|$)').exec(location.href)||[,null])[1]\r\n  newpage = 'page=' + (parseInt(page,10)+1);\r\n  href = location.href.replace(\/page=[^&]+\/, newpage);\r\n  html += '<a class=\"next\" href=\"' + href + '\" \/a>'\r\n}\r\ndocument.body.innerHTML=html;",
    "grid": "div.movie",
    "details_html": "regex((.*))",
    "title": "h3",
    "image": ".poster:regex(.*src=\"([^\"]*)\".*)",
    "magnet": "a.magnet:regex(.*href=\"([^\"]*)\".*)",
    "torrent": "a.torrent:regex(.*href=\"([^\"]*)\".*)",
    "next": ".next:regex(.*href=\"([^\"]*)\".*)"
  }
}
